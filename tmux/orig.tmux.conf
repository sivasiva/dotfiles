# ====================
# REF: https://juliu.is/a-simple-tmux/
# ====================


# ====================
# Prefix
# ====================
unbind C-b
set -g prefix C-a

# ====================
# Shell
# ====================
set -g default-shell $SHELL

# ====================
# Mouse
# ====================
set -g mouse on

# ====================
# History
# ====================
set -g history-limit 102400

# ====================
# Numbering
# ====================
set -g base-index 1
setw -g pane-base-index 1

# Re-number windows when creating/closing new windows
set -g renumber-windows on

# ====================
# Vim integration
# ====================

# Use emacs key bindings in status line
set-option -g status-keys emacs

# Use vim key bindings in copy mode
setw -g mode-keys vi

# Fix ESC delay in vim
set -g escape-time 10


# ====================
# Copy-mode
# ====================
unbind-key -T copy-mode-vi v
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi 'C-v' send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

# Send command on double press
bind C-a send-prefix
bind C-l send-keys 'C-l'


# ====================
# Split panes and remember current path
# ====================
bind '\' split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

# Remember current path when creating new windows
bind c new-window -c '#{pane_current_path}'

# Break pane into new window and keep focus on the current window
bind b break-pane -d

# ====================
# Smart pane switching with awareness of Vim splits.
# ====================
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n 'C-\' if-shell "$is_vim" "send-keys 'C-\'" "select-pane -l"
# bind-key -T copy-mode-vi C-h select-pane -L
# bind-key -T copy-mode-vi C-j select-pane -D
# bind-key -T copy-mode-vi C-k select-pane -U
# bind-key -T copy-mode-vi C-l select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

# ====================
# Status Bar
# ====================
# Ref: http://mjswensen.com/blog/2014/08/09/friendlier-tmux-status-bar/
set -g status-left-length 100
set-window-option -g window-status-format " #I: #W "
set-window-option -g window-status-current-format " #I: #W "
set -g window-status-current-style bg=black,fg=white,bold
set -g status-left '#[fg=white,bg=colour209,bold]       #S       '
set -g status-right '#[fg=black,bg=white,bold] %a %d %b | %I:%M %p '


# ====================
# Resizing
# ====================
# bind resizing of panes to H,J,K,L (resizes by steps of 10 lines/columns)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# ====================
# Reload tmux.conf on prefix r
# ====================
bind r source-file ~/.tmux.conf \; display "Config reloaded!"

# from nvim 5 `checkhealth` instructions
set-option -g focus-events on
set-option -g default-terminal "screen-256color"
# set-option -sa terminal-overrides ',XXX:RGB'
# set-option -a terminal-overrides ",*256col*:RGB"


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Needs `iTerm2 v3.x > Settings > General > Selection > Applications in terminal may access clipboard` to be ON
set -g @plugin 'tmux-plugins/tmux-yank'


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'